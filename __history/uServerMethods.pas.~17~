unit uServerMethods;

interface

uses System.SysUtils, System.Classes, Datasnap.DSServer, Datasnap.DSAuth,
     uPessoa;

type
{$METHODINFO ON}
  TServerMethods = class(TComponent)
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;

  private
    Pessoa: TPessoa;

  public
    // devolve string recebida
    // retorna: {"result":["oi"]}
    function EchoString(Value: string): string;

    // obtem dados da pessoa idpessoa
    // retorna:
    function GET( idpessoa: integer ): string;

    // cadastrar uma pessoa, e seu endereço
    // retorno:
    function POST( aJson: string ): string;

  end;
{$METHODINFO OFF}

implementation

uses
  System.StrUtils;

// teste:
// http://localhost:9000/datasnap/rest/TServerMethods/EchoString/oi
constructor TServerMethods.Create(AOwner: TComponent);
begin
  inherited Create(AOwner);
  Pessoa := TPessoa.Create;
end;

destructor TServerMethods.Destroy;
begin
  Pessoa.DisposeOf;
end;

function TServerMethods.EchoString(Value: string): string;
begin
  Result := Value;
end;

// obter dados sobre uma pessoa:
// http://localhost:9000/datasnap/rest/TServerMethods/GET/1
function TServerMethods.GET(idpessoa: integer): string;
var ret: string;
    msgerro: string;
begin
  ret := Pessoa.GET_pessoa( idpessoa, msgerro );
  // verifica se houve algum erro
  if msgerro <> '' then begin
    ret := msgerro;
  end;
  Result := ret;
end;

// obter dados sobre uma pessoa:
// http://localhost:9000/datasnap/rest/TServerMethods/POST/{"flnatureza": 123456,"dsdocumento": "000.000.0001-23","nmprimeiro": "José","nmsegundo": "Silva","cep": "07000-000"}
function TServerMethods.POST(aJson: string): string;
var ret: string;
    msgerro: string;
    idpessoa: integer;
begin
  ret := Pessoa.POST_pessoa( aJson, msgerro );
  // verifica se houve algum erro
  if msgerro <> '' then begin
    ret := msgerro;
  end;
  Result := ret;
end;

end.

